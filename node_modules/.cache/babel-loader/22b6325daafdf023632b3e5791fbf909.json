{"ast":null,"code":"const API_URL = 'http://localhost:8000';\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const res = await fetch(`${API_URL}/planets`);\n  return res.json();\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const res = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await res.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (err) {\n    return {\n      of: false\n    };\n  }\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"names":["API_URL","httpGetPlanets","res","fetch","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","of","httpAbortLaunch","id"],"sources":["D:/Udemy/ZTM/NASA Project/client/src/hooks/requests.js"],"sourcesContent":["const API_URL = 'http://localhost:8000'\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const res = await fetch(`${API_URL}/planets`);\n  return res.json();\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\nconst res =  await fetch(`${API_URL}/launches`);\nconst fetchedLaunches = await res.json();\nreturn fetchedLaunches.sort((a, b) => {\n  return a.flightNumber - b.flightNumber;\n});\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n  try{\nreturn await fetch(`${API_URL}/launches`,{\n    method:\"post\",\n    headers:{\n      \"Content-Type\":\"application/json\"\n    },\n    body: JSON.stringify(launch),\n  })\n  }\n  catch(err){\n    return {\n      of:false,\n    };\n  }\n  \n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AAEA,eAAeC,cAAf,GAAgC;EAC9B;EACA;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAAvB;EACA,OAAOE,GAAG,CAACE,IAAJ,EAAP;AACD;;AAED,eAAeC,eAAf,GAAiC;EAC/B;EACA;EACF,MAAMH,GAAG,GAAI,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,CAAxB;EACA,MAAMM,eAAe,GAAG,MAAMJ,GAAG,CAACE,IAAJ,EAA9B;EACA,OAAOE,eAAe,CAACC,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;IACpC,OAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;EACD,CAFM,CAAP;AAGC;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC;EACtC;EACA;EACA,IAAG;IACL,OAAO,MAAMT,KAAK,CAAE,GAAEH,OAAQ,WAAZ,EAAuB;MACrCa,MAAM,EAAC,MAD8B;MAErCC,OAAO,EAAC;QACN,gBAAe;MADT,CAF6B;MAKrCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;IAL+B,CAAvB,CAAlB;EAOG,CARD,CASA,OAAMM,GAAN,EAAU;IACR,OAAO;MACLC,EAAE,EAAC;IADE,CAAP;EAGD;AAEF;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;EACA;AACD;;AAED,SACEpB,cADF,EAEEI,eAFF,EAGEM,gBAHF,EAIES,eAJF"},"metadata":{},"sourceType":"module"}